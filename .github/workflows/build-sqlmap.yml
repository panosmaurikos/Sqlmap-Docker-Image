name: Build and Push sqlmap Docker Image

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Check for new sqlmap release
        id: check_release
        run: |
          # Fetch latest release tag from GitHub API
          LATEST_TAG=$(curl -s https://api.github.com/repos/sqlmapproject/sqlmap/releases/latest | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")
          echo "Latest sqlmap tag: $LATEST_TAG"
          
          # Get current tag from Docker Hub
          CURRENT_TAG=$(curl -s "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/sqlmap/tags/?page_size=1" | python -c "import sys, json; data = json.load(sys.stdin)['results']; print(data[0]['name'] if data else 'none')")
          echo "Current Docker tag: $CURRENT_TAG"
          
          if [ "$LATEST_TAG" != "$CURRENT_TAG" ]; then
            echo "New release found! Building for $LATEST_TAG"
            echo "new_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          else
            echo "No new release. Exiting."
            exit 0
          fi

      - name: Login to Docker Hub
        if: steps.check_release.outputs.new_tag
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        if: steps.check_release.outputs.new_tag
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            SQLMAP_VERSION=${{ steps.check_release.outputs.new_tag }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/sqlmap:${{ steps.check_release.outputs.new_tag }}
            ${{ secrets.DOCKER_USERNAME }}/sqlmap:latest

      - name: Update README with new version
        if: steps.check_release.outputs.new_tag
        run: |
          # Replace $(version) with the new tag in README
          sed -i "s/\$(version)/${{ steps.check_release.outputs.new_tag }}/g" README.md
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "Update README for sqlmap ${{ steps.check_release.outputs.new_tag }}"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/panosmaurikos/Sqlmap-Docker-Image.git
          git push